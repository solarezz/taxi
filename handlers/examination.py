from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import (
    Message, ReplyKeyboardRemove
)

from create_bot import bot
from filters.is_admin import IsAdmin
from keyboards.all_keyboards import ex_predriver, yes_or_no, menu_keyboard
from db_handler.db_predrivers import PreDrivers

ex = Router()
pd = PreDrivers()


class Form(StatesGroup):
    choice_exam = State()
    choices = State()


@ex.message(F.text == "üìù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏—è")
async def examination(message: Message, state: FSMContext):
    phones = await pd.phone_info()
    if IsAdmin(message.chat.id):
        ReplyKeyboardRemove()
        if phones:
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ:", reply_markup=ex_predriver(phones))
            await state.set_state(Form.choice_exam)
        else:
            await message.answer("–ó–∞—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç!", reply_markup=menu_keyboard(message.chat.id))
            await state.clear()


@ex.message(F.text, Form.choice_exam)
async def if_phone(message: Message, state: FSMContext):
    phones = await pd.phone_info()
    phone = message.text
    if phone in phones:
        pred = await pd.info(phone)
        await state.update_data(phone=phone)
        await state.set_state(Form.choices)
        await message.answer(f"""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞—è–≤–ª–µ–Ω–∏—é -
–ò–º—è: {pred[1]}
–°—Ç–∞–∂: {pred[3]}
–ú–∞—à–∏–Ω–∞: {pred[4]}
–ù–æ–º–µ—Ä –º–∞—à–∏–Ω—ã: {pred[5]}""",
                             reply_markup=yes_or_no())


@ex.message(F.text, Form.choices)
async def choice_process(message: Message, state: FSMContext):
    await state.update_data(msg=message.text)
    data = await state.get_data()
    info = await pd.info(data.get("phone"))

    print(f"---Message: {data.get('msg')}, Info: {info}---")

    if data.get("msg") == "üü¢ –ü–æ–¥—Ö–æ–¥–∏—Ç":
        await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!', reply_markup=menu_keyboard(message.chat.id))
        try:
            await bot.send_message(info[2], "–í—ã –Ω–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç–µ, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞!")
            await pd.delete(phone_number=data.get("phone"))
        except Exception as e:
            print(f"Error sending message: {e}")

    elif data.get("msg") == "üî¥ –ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç":
        await message.answer('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!', reply_markup=menu_keyboard(message.chat.id))
        try:
            await bot.send_message(info[2], "–í—ã –Ω–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç–µ!")
            await pd.delete(phone_number=data.get("phone"))
        except Exception as e:
            print(f"Error sending message: {e}")
    await state.clear()

