from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import (
    Message, ReplyKeyboardRemove
)
from keyboards.all_keyboards import *
from db_handler.db_predrivers import PreDrivers

im_the_driver = Router()
pd = PreDrivers()


class Form(StatesGroup):
    driver_name = State()
    phone_number = State()
    experience = State()
    car = State()
    number_car = State()


@im_the_driver.message(F.text == 'üö¶ –Ø –≤–æ–¥–∏—Ç–µ–ª—å')
async def im_driver(message: Message, state: FSMContext):
    await state.set_state(Form.driver_name)
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ –§–ò–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤":',
                         reply_markup=ReplyKeyboardRemove())


@im_the_driver.message(F.text, Form.driver_name)
async def process_fullname(message: Message, state: FSMContext):
    await state.update_data(driver_name=message.text)
    await message.answer(f'–û—Ç–ª–∏—á–Ω–æ, {message.text}. –î–∞–ª–µ–µ –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–∞—à –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ "+79999999999":')
    await state.set_state(Form.phone_number)


@im_the_driver.message(F.text, Form.phone_number)
async def process_number(message: Message, state: FSMContext):
    await state.update_data(phone_number=message.text)
    await message.answer('–¢–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–µ–Ω –í–∞—à —Å—Ç–∞–∂:')
    await state.set_state(Form.experience)


@im_the_driver.message(F.text, Form.experience)
async def process_experience(message: Message, state: FSMContext):
    await state.update_data(experience=message.text)
    await message.answer('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–í–ê–ó 2107":')
    await state.set_state(Form.car)


@im_the_driver.message(F.text, Form.car)
async def process_car(message: Message, state: FSMContext):
    await state.update_data(car=message.text)
    await message.answer('–û—Ç–ª–∏—á–Ω–æ, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ê123–ê–ê 59":')
    await state.set_state(Form.number_car)


@im_the_driver.message(F.text, Form.number_car)
async def process_number_car(message: Message, state: FSMContext):
    await state.update_data(number_car=message.text)
    data = await state.get_data()
    await pd.driver_application(driver_name=data.get("driver_name"),
                                telegram_user_id=message.chat.id,
                                experience=data.get("experience"),
                                car=data.get("car"),
                                number_car=data.get("number_car"),
                                phone_number=data.get("phone_number"))
    await message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞!', reply_markup=menu_keyboard(message.chat.id))
    await state.clear()
